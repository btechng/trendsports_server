import express from "express";
import cors from "cors";
import helmet from "helmet";
import cookieParser from "cookie-parser";
import http from "http";
import { ENV } from "./config/env.js";
import { connectDB } from "./db.js";
import { setupSockets } from "./utils/sockets.js";
import trendsRoute from "./routes/trends.js";
import sportsRoute from "./routes/sports.js";
import predictionsRoute from "./routes/predictions.js";
import authRoute from "./routes/auth.js";
import commentsRoute from "./routes/comments.js";
import leaderboardRoute from "./routes/leaderboard.js";
import { fetchAndStoreTrends } from "./services/trendsAdapter.js";
import { fetchUpcomingFootball } from "./services/sportsAdapter.js";
import { predictForUpcoming } from "./services/aiPredictor.js";
const app = express();
app.use(helmet());
app.use(cors({ origin: ENV.CLIENT_ORIGIN.split(","), credentials: true }));
app.use(express.json());
app.use(cookieParser());
app.get("/api/health", (req, res) => res.json({ ok: true }));
app.use("/api/auth", authRoute);
app.use("/api/trends", trendsRoute);
app.use("/api/sports", sportsRoute);
app.use("/api/predictions", predictionsRoute);
app.use("/api/comments", commentsRoute);
app.use("/api/leaderboard", leaderboardRoute);
const server = http.createServer(app);
setupSockets(server);
(async () => {
    await connectDB();
    const run = async () => {
        await fetchAndStoreTrends();
        await fetchUpcomingFootball(2);
        await predictForUpcoming();
    };
    await run();
    setInterval(run, 5 * 60 * 1000);
    server.listen(ENV.PORT, () => console.log(`ðŸš€ API http://localhost:${ENV.PORT}`));
})();
